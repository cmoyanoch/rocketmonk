version: '3.8'

services:
  traefik:
    image: "traefik:v2.10"
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Puerto para el dashboard de Traefik
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-dashboard.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.traefik-dashboard.entrypoints=websecure
      - traefik.http.routers.traefik-dashboard.tls.certresolver=mytlschallenge
      - traefik.http.routers.traefik-dashboard.service=api@internal
    networks:
      - internal

  api:
    build:
      context: /home/biwi47do/docker-projects/api-secure
    container_name: api-secure
    ports:
      - "127.0.0.1:3443:3443"
    volumes:
      - /home/biwi47do/docker-projects/api-secure/ssl:/app/ssl
    cap_add:
      - SYS_ADMIN
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`${API_SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.api-redirect.redirectscheme.scheme=https
      - traefik.http.routers.api.middlewares=api-redirect@docker
      - traefik.http.services.api.loadbalancer.server.port=3443
    depends_on:
      - traefik
    networks:
      - internal
    environment:
      - PORT=3443

  n8n:
    image: docker.n8n.io/n8nio/n8n:1.95.3
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${N8N_SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=websecure
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.n8n-redirect.redirectscheme.scheme=https
      - traefik.http.routers.n8n.middlewares=n8n-redirect@docker
      - traefik.http.services.n8n.loadbalancer.server.port=5678
    environment:
      - N8N_HOST=${N8N_SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${N8N_SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n_postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - n8n_data:/home/node/.n8n
      - /local-files:/files
    depends_on:
      - n8n_postgres
    networks:
      - internal

  n8n_postgres:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  pgadmin:
    image: dpage/pgadmin4:latest # Imagen oficial de pgAdmin 4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80 # pgAdmin escucha en el puerto 80 internamente
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN_NAME}`) # Subdominio para pgAdmin
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.routers.pgadmin.tls.certresolver=mytlschallenge
      - traefik.http.services.pgadmin.loadbalancer.server.port=80 # Puerto interno de pgAdmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin # Volumen para persistir la configuración y datos de pgAdmin
    depends_on:
      - n8n_postgres # pgAdmin necesita que la base de datos esté lista
    networks:
      - internal

volumes:
  traefik_data:
  n8n_data:
  postgres_data:
  pgadmin_data:

networks:
  internal:
    driver: bridge